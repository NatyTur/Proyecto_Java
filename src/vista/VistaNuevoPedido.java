package vista;

import controlador.Controlador;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;



public class VistaNuevoPedido extends javax.swing.JFrame {

    private Controlador miControlador;
    private String CodigoClienteSeleccionado;
    private String [] CodigoPedido = new String[1];

    /**
     * Creates new form VistaNuevoCliente
     */
    public VistaNuevoPedido() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        Cliente = new javax.swing.JLabel();
        FechaEntry = new javax.swing.JTextField();
        Fecha = new javax.swing.JLabel();
        FormaDePago = new javax.swing.JLabel();
        GuardarPedido = new javax.swing.JButton();
        Nota = new javax.swing.JLabel();
        FormaDePagoCombo = new javax.swing.JComboBox<>();
        Calendar = new com.toedter.calendar.JCalendar();
        ClienteEntry = new javax.swing.JTextField();
        SeleccionarCliente = new javax.swing.JButton();

        jLabel1.setText("Borrar Label");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuevo Pedido");
        setName("NuevoCliente"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        Cliente.setText("Cliente");

        FechaEntry.setFocusable(false);
        FechaEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FechaEntryKeyTyped(evt);
            }
        });

        Fecha.setText("Fecha");

        FormaDePago.setText("Forma de Pago");

        GuardarPedido.setText("Crear");
        GuardarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarPedidoActionPerformed(evt);
            }
        });

        Nota.setText("Todos los campos son obligatorios");

        FormaDePagoCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Contado", "Tarjeta", "Débito", "Transferencia", "Cheque" }));
        FormaDePagoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormaDePagoComboActionPerformed(evt);
            }
        });

        Calendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                CalendarPropertyChange(evt);
            }
        });

        ClienteEntry.setFocusable(false);
        ClienteEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ClienteEntryKeyTyped(evt);
            }
        });

        SeleccionarCliente.setText("Seleccionar");
        SeleccionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeleccionarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Calendar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FormaDePago, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FormaDePagoCombo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Cliente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Fecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ClienteEntry, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                                .addComponent(FechaEntry, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(SeleccionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(GuardarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(Nota, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Cliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SeleccionarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClienteEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FechaEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FormaDePago)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FormaDePagoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GuardarPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Nota)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    /*VALIDACIONES Y LIMPIEZA DE DATOS*/
    private void FechaEntryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FechaEntryKeyTyped
        // Evento que se dispara cuando se ingresa un caracter en el cuadro de texto
        if(FechaEntry.getText().length() >= 30)
        {
            evt.consume(); //evt.consume() eso quiere decir que el evento se consumirá e impide en este caso, el ingreso de mas caracteres.
            System.out.println("Ha llegado al maximo de caracteres en el campo");
        }
    }//GEN-LAST:event_FechaEntryKeyTyped

    private void GuardarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarPedidoActionPerformed
        // Se presiona el botón de guardar cliente. Se debe validar que los campos estén completos
        if(!FechaEntry.getText().isEmpty() && !ClienteEntry.getText().isEmpty())
        {
            //llamo al metodo del controlador encargado de guardar un nuevo pedido
            
            miControlador.guardarNuevoPedido(CodigoPedido, CodigoClienteSeleccionado, ClienteEntry.getText(),FechaEntry.getText(), FormaDePagoCombo.getModel().getElementAt(FormaDePagoCombo.getSelectedIndex()));
            JOptionPane.showMessageDialog(null, "Se creó el pedido correctamente");
            miControlador.abrirPantallaProductosPedidos(CodigoPedido[0]);
            
            //Limpia los campos de texto en la vista para poder cargar un nuevo cliente.
            ClienteEntry.setText(null);
            FechaEntry.setText(null);  
            dispose(); //Validar el dispose con el retorno exitoso del guardarNuevoCliente()
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Algún campo se encuentra vacío");
        }
        
    }//GEN-LAST:event_GuardarPedidoActionPerformed

    private void FormaDePagoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormaDePagoComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FormaDePagoComboActionPerformed

    private void ClienteEntryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClienteEntryKeyTyped
       if(ClienteEntry.getText().length() >= 30)
        {
            evt.consume(); //evt.consume() eso quiere decir que el evento se consumirá e impide en este caso, el ingreso de mas caracteres.
            System.out.println("Ha llegado al maximo de caracteres en el campo");
        }
    }//GEN-LAST:event_ClienteEntryKeyTyped

    private void CalendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_CalendarPropertyChange
        if(evt.getOldValue() != null)
        {
            SimpleDateFormat FF = new SimpleDateFormat("dd/MM/yyyy");
            FechaEntry.setText(FF.format(Calendar.getCalendar().getTime()));
        }
    }//GEN-LAST:event_CalendarPropertyChange

    private void SeleccionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeleccionarClienteActionPerformed
        miControlador.abrirPantallaSeleccionCliente();
    }//GEN-LAST:event_SeleccionarClienteActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        ClienteEntry.setText(null);
        FechaEntry.setText(null);
    }//GEN-LAST:event_formWindowClosed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
            SimpleDateFormat FF = new SimpleDateFormat("dd/MM/yyyy");
            FechaEntry.setText(FF.format(Calendar.getCalendar().getTime()));  
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaNuevoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaNuevoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaNuevoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaNuevoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaNuevoPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JCalendar Calendar;
    private javax.swing.JLabel Cliente;
    private javax.swing.JTextField ClienteEntry;
    private javax.swing.JLabel Fecha;
    private javax.swing.JTextField FechaEntry;
    private javax.swing.JLabel FormaDePago;
    private javax.swing.JComboBox<String> FormaDePagoCombo;
    private javax.swing.JButton GuardarPedido;
    private javax.swing.JLabel Nota;
    private javax.swing.JButton SeleccionarCliente;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public void setControlador(Controlador miControlador) {
        this.miControlador=miControlador;
    }

    public void setClienteEntry(String ClienteSeleccionado, String Codigo) {
        this.ClienteEntry.setText(ClienteSeleccionado);
        this.CodigoClienteSeleccionado=Codigo;
    }
    
    public void cleanClienteEntry() {
        this.ClienteEntry.setText("");
    }
    
    
}
